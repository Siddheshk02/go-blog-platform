openapi: 3.0.0
info:
  title: Go Blog Platform API
  description: This is a simple RESTful API for a blog platform built with Go.
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/KHANDAGALESID02_1/Blog-Platform/1.0.0
  description: SwaggerHub API Auto Mocking
- url: http://localhost:8080
  description: Local server
paths:
  /register:
    post:
      tags:
      - User Management
      summary: Register a new user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/register_body'
        required: true
      responses:
        "201":
          description: User registered successfully
        "400":
          description: Invalid input
  /login:
    post:
      tags:
      - User Management
      summary: User login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login_body'
        required: true
      responses:
        "200":
          description: Successful login
          headers:
            Authorization:
              style: simple
              explode: false
              schema:
                type: string
                description: JWT bearer token for authorization
        "401":
          description: Invalid credentials
  /profile:
    get:
      tags:
      - User Management
      summary: Get user profile
      responses:
        "200":
          description: User profile retrieved successfully
        "401":
          description: Unauthorized
      security:
      - bearerAuth: []
    put:
      tags:
      - User Management
      summary: Update user profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/profile_body'
        required: true
      responses:
        "200":
          description: User profile updated successfully
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
      security:
      - bearerAuth: []
  /posts:
    get:
      tags:
      - Blog Post Management
      summary: Get all blog posts
      responses:
        "200":
          description: List of all blog posts
        "404":
          description: No blog posts found
    post:
      tags:
      - Blog Post Management
      summary: Create a new blog post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/posts_body'
        required: true
      responses:
        "201":
          description: Blog post created successfully
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
      security:
      - bearerAuth: []
  /posts/{id}:
    get:
      tags:
      - Blog Post Management
      summary: Get a blog post by ID
      parameters:
      - name: id
        in: path
        description: Numeric ID of the blog post to get
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Blog post retrieved successfully
        "404":
          description: Blog post not found
    put:
      tags:
      - Blog Post Management
      summary: Update a blog post
      parameters:
      - name: id
        in: path
        description: Numeric ID of the blog post to update
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/posts_id_body'
        required: true
      responses:
        "200":
          description: Blog post updated successfully
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
        "404":
          description: Blog post not found
      security:
      - bearerAuth: []
    delete:
      tags:
      - Blog Post Management
      summary: Delete a blog post
      parameters:
      - name: id
        in: path
        description: Numeric ID of the blog post to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "204":
          description: Blog post deleted successfully
        "401":
          description: Unauthorized
        "404":
          description: Blog post not found
      security:
      - bearerAuth: []
components:
  schemas:
    register_body:
      required:
      - email
      - password
      - username
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password
    profile_body:
      required:
      - email
      - username
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
    posts_body:
      required:
      - content
      - title
      type: object
      properties:
        title:
          type: string
        content:
          type: string
    login_body:
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
    posts_id_body:
      required:
      - content
      - title
      type: object
      properties:
        title:
          type: string
        content:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
